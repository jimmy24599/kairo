'use client'

import TodoMessage from './TodoMessage'
import StepMessage from './StepMessage'
import RegularMessage from './RegularMessage'
import ProcessingMessage from './ProcessingMessage'
import TasksComponent from './TasksComponent'

interface Message {
  id: string
  role: 'user' | 'agent'
  content: string
  timestamp: Date
  isStep?: boolean
  messageType?: 'text' | 'todo' | 'step' | 'tasks' | 'todoList'
  stepData?: any
  tasks?: Map<string, string> | Array<{
    tool: string
    explanation: string
    status: 'pending' | 'running' | 'done' | 'failed'
  }> // For todo messages - Map of task order to todo ObjectId, for tasks messages - Array of tasks
  todoListTasks?: Array<{
    taskId: number
    text: string
    status: 'pending' | 'running' | 'done' | 'failed'
    tool: string
  }> // For todoList messages - Array of task objects
}

interface Todo {
  _id: string
  taskName: string
  order: number
  status: 'pending' | 'running' | 'done' | 'failed'
  subtask?: string
}

interface SubtaskItem {
  name: string
  tool: string
  parameters: any
  status: 'pending' | 'running' | 'done' | 'failed' | 'skipped'
}

interface Subtask {
  _id: string
  todoId: string
  tasksName: Map<string, SubtaskItem>
}

interface AgentTask {
  id: string
  description?: string
  text?: string
  status: 'pending' | 'active' | 'completed' | 'error'
}

interface MessagesContainerProps {
  messages: Message[]
  agentTasks: AgentTask[]
  todos: Todo[]
  subtasks: Map<string, Subtask>
  currentAgentThought?: string
  isAgentProcessing: boolean
  onFetchSubtasks?: (subtaskId: string) => Promise<void>
}

export default function MessagesContainer({ 
  messages, 
  agentTasks, 
  todos,
  subtasks,
  currentAgentThought, 
  isAgentProcessing,
  onFetchSubtasks
}: MessagesContainerProps) {
  return (
    <div className="flex-1 p-3 space-y-4 overflow-y-auto">
      {messages.map((message) => {
        console.log('üîç Processing message:', message.messageType, message)
        // Handle tasks messages (permanent completed tasks)
        if (message.messageType === 'tasks' && Array.isArray(message.tasks)) {
          return (
            <div key={message.id} className="space-y-2">
              <div className="flex items-center gap-2">
                <div className="w-6 h-6 rounded-md bg-gradient-to-tr from-orange-300 via-blue-400 to-sky-400 flex items-center justify-center flex-shrink-0">
                  <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="12" height="12" viewBox="0 0 512 512">
                    <path d="M0 0 C3.31548061 1.38707072 4.85421798 2.79591027 6.8125 5.7890625 C7.32425781 6.55734375 7.83601562 7.325625 8.36328125 8.1171875 C8.90339844 8.94476563 9.44351563 9.77234375 10 10.625 C14.17539424 16.88337873 18.42614587 23.02620453 23 29 C27.95268626 35.49181366 32.57338443 42.16916508 37.14453125 48.93359375 C40.62945331 54.06532862 44.23880082 59.06776783 48 64 C52.95133225 70.49290799 57.57332126 77.1690716 62.14453125 83.93359375 C65.62945331 89.06532862 69.23880082 94.06776783 73 99 C77.95133225 105.49290799 82.57332126 112.1690716 87.14453125 118.93359375 C90.62945331 124.06532862 94.23880082 129.06776783 98 134 C102.95133225 140.49290799 107.57332126 147.1690716 112.14453125 153.93359375 C115.62945331 159.06532862 119.23880082 164.06776783 123 169 C127.95133225 175.49290799 132.57332126 182.1690716 137.14453125 188.93359375 C140.62945331 194.06532862 144.23880082 199.06776783 148 204 C152.95133225 210.49290799 157.57332126 217.1690716 162.14453125 223.93359375 C165.62945331 229.06532862 169.23880082 234.06776783 173 239 C177.95133225 245.49290799 182.57332126 252.1690716 187.14453125 258.93359375 C190.62945331 264.06532862 194.23880082 269.06776783 198 274 C202.3566042 279.71301395 206.4772241 285.54736679 210.5 291.5 C214.548718 297.48851556 218.69217759 303.36669358 223.0625 309.125 C227.35514285 314.80257479 231.63082681 320.48995318 235.8125 326.25 C236.34689697 326.96559082 236.88129395 327.68118164 237.43188477 328.41845703 C237.91455811 329.08989746 238.39723145 329.76133789 238.89453125 330.453125 C239.32612549 331.04254883 239.75771973 331.63197266 240.20239258 332.23925781 C241 334 241 334 240.97265625 336.00219727 C239.512313 339.00169245 237.42593229 339.88210014 234.54296875 341.51171875 C233.97739258 341.83681931 233.41181641 342.16191986 232.82910156 342.49687195 C231.60085006 343.20119352 230.36927926 343.89975079 229.13485718 344.59320068 C226.47932516 346.08545229 223.84019478 347.60565648 221.20002747 349.12487793 C219.82839141 349.91405944 218.45597395 350.70188428 217.08280945 351.48840332 C210.37855131 355.33453687 203.77924774 359.33934277 197.1875 363.375 C187.16995221 369.49373991 177.10213194 375.5220115 167 381.5 C156.96290768 387.44031075 146.9582 393.4283432 137 399.5 C126.36671155 405.98326787 115.6763327 412.36477342 104.95898438 418.70800781 C95.60315969 424.24705071 86.28309988 429.83996139 77 435.5 C65.71339304 442.3816055 54.36764899 449.15868528 42.97900391 455.87011719 C36.25437169 459.83923289 29.57515353 463.86474776 22.9609375 468.015625 C21.67073886 468.81992771 20.38037729 469.62396914 19.08984375 470.42773438 C16.66647009 471.93722732 14.25788246 473.46719522 11.85546875 475.00976562 C10.77652344 475.68201172 9.69757813 476.35425781 8.5859375 477.046875 C7.6479834 477.64338867 6.7100293 478.23990234 5.74365234 478.85449219 C2.27236016 480.30379837 0.58610365 480.05353468 -3 479 C-5.74365234 477.62744141 -5.74365234 477.62744141 -8.5859375 475.8515625 C-9.66488281 475.18576172 -10.74382812 474.51996094 -11.85546875 473.83398438 C-12.42700684 473.47522217 -12.99854492 473.11645996 -13.58740234 472.74682617 C-16.05225642 471.19998043 -18.53026363 469.67480085 -21.00787354 468.14849854 C-22.3217643 467.33907547 -23.63502711 466.5286323 -24.94769287 465.71722412 C-31.57773882 461.62474993 -38.27633236 457.65141859 -44.98516846 453.68988037 C-56.27418991 447.02302771 -67.5150251 440.2831247 -78.70898438 433.45800781 C-88.09842559 427.73548064 -97.53738361 422.10060119 -107 416.5 C-117.61130098 410.21953143 -128.18099227 403.877075 -138.70898438 397.45800781 C-148.09843074 391.7354775 -157.53758594 386.10094959 -167 380.5 C-180.53931916 372.48407721 -194.00622637 364.35670738 -207.44140625 356.16748047 C-213.23821702 352.63522616 -219.04242387 349.11513645 -224.84558105 345.59332275 C-227.85041734 343.76963886 -230.85488192 341.94534301 -233.859375 340.12109375 C-235.35162598 339.21508423 -235.35162598 339.21508423 -236.87402344 338.29077148 C-237.5755957 337.86481689 -238.27716797 337.4388623 -239 337 C-238.39972294 334.01415322 -237.50849464 331.99024954 -235.734375 329.5234375 C-235.26322266 328.86214844 -234.79207031 328.20085937 -234.30664062 327.51953125 C-233.79294922 326.81183594 -233.27925781 326.10414063 -232.75 325.375 C-232.21568359 324.62863281 -231.68136719 323.88226563 -231.13085938 323.11328125 C-229.42722586 320.73731739 -227.71462242 318.36804308 -226 316 C-224.91133811 314.4922743 -223.82279443 312.98446324 -222.734375 311.4765625 C-221.11040032 309.22801992 -219.48558746 306.98010453 -217.85839844 304.73388672 C-214.20142688 299.68186437 -210.58728073 294.60170003 -207 289.5 C-202.33863251 282.87077288 -197.61055569 276.29271463 -192.85546875 269.73046875 C-189.20004412 264.67917792 -185.58642038 259.60047648 -182 254.5 C-177.33863251 247.87077288 -172.61055569 241.29271463 -167.85546875 234.73046875 C-164.20004412 229.67917792 -160.58642038 224.60047648 -157 219.5 C-152.33863251 212.87077288 -147.61055569 206.29271463 -142.85546875 199.73046875 C-139.20004412 194.67917792 -135.58642038 189.60047648 -132 184.5 C-127.33863251 177.87077288 -122.61055569 171.29271463 -117.85546875 164.73046875 C-114.20004412 159.67917792 -110.58642038 154.60047648 -107 149.5 C-102.33863251 142.87077288 -97.61055569 136.29271463 -92.85546875 129.73046875 C-89.20004412 124.67917792 -85.58642038 119.60047648 -82 114.5 C-77.33863251 107.87077288 -72.61055569 101.29271463 -67.85546875 94.73046875 C-64.20004412 89.67917792 -60.58642038 84.60047648 -57 79.5 C-52.33863251 72.87077288 -47.61055569 66.29271463 -42.85546875 59.73046875 C-39.20004412 54.67917792 -35.58642038 49.60047648 -32 44.5 C-27.34740403 37.88324743 -22.62932662 31.31675215 -17.88183594 24.76782227 C-13.43245083 18.62135296 -9.04874099 12.43018319 -4.69335938 6.21679688 C-1.10099546 1.10099546 -1.10099546 1.10099546 0 0 Z M-20 99 C-21.79576354 101.24470443 -23.5334364 103.50795414 -25.25 105.8125 C-25.78431641 106.52664062 -26.31863281 107.24078125 -26.86914062 107.9765625 C-31.46897523 114.17750368 -35.81901319 120.53314429 -40.14160156 126.92895508 C-44.08579799 132.73777683 -48.22374393 138.35936869 -52.48046875 143.94140625 C-56.3246482 149.0165303 -59.93563965 154.22542399 -63.5 159.5 C-67.98072059 166.13061503 -72.62847475 172.57876504 -77.48046875 178.94140625 C-81.3246482 184.0165303 -84.93563965 189.22542399 -88.5 194.5 C-92.98072059 201.13061503 -97.62847475 207.57876504 -102.48046875 213.94140625 C-106.3246482 219.0165303 -109.93563965 224.22542399 -113.5 229.5 C-117.98072059 236.13061503 -122.62847475 242.57876504 -127.48046875 248.94140625 C-131.3246482 254.0165303 -134.93563965 259.22542399 -138.5 264.5 C-142.52263875 270.45274095 -146.64361272 276.28682301 -151 282 C-155.97714183 288.53136674 -160.65017427 295.23554069 -165.2565918 302.0324707 C-170.05344711 309.10785051 -174.99331353 316.07201172 -180 323 C-177.03581182 326.21693815 -174.03722408 328.33784972 -170.25 330.51171875 C-169.68866867 330.83681931 -169.12733734 331.16191986 -168.54899597 331.49687195 C-167.33701567 332.198256 -166.12347346 332.89694668 -164.90853882 333.59320068 C-161.61457936 335.48185893 -158.33318468 337.39213242 -155.05078125 339.30078125 C-154.37582108 339.69269653 -153.7008609 340.08461182 -153.00544739 340.48840332 C-146.34555132 344.36349127 -139.76237431 348.35749441 -133.1875 352.375 C-123.1686301 358.4916133 -113.10216771 364.52199033 -103 370.5 C-91.8290865 377.11134674 -80.70880127 383.79873583 -69.62646484 390.55737305 C-58.96476087 397.04813307 -48.23117865 403.41574098 -37.48046875 409.7578125 C-36.82565521 410.14490891 -36.17084167 410.53200531 -35.4961853 410.93083191 C-33.72298223 411.97900762 -31.94868898 413.02533846 -30.17431641 414.0715332 C-27.98259242 415.40305357 -25.82966808 416.799834 -23.71240234 418.24682617 C-21.25833113 420.18094478 -21.25833113 420.18094478 -19 420 C-19 314.07 -19 208.14 -19 99 C-19.33 99 -19.66 99 -20 99 Z " fill="#FFFFFF" transform="translate(255,16)"/>
                  </svg>
                </div>
                <div className="text-white text-[13px] medium">Kairo</div>
              </div>
              <div className="w-full">
                <TasksComponent 
                  tasks={message.tasks}
                  isActive={false}
                />
              </div>
            </div>
          )
        }

        // Handle todoList messages with MongoDB-based tasks
        if (message.messageType === 'todoList') {
          console.log('üîç Found todoList message:', message)
          console.log('üîç todoListTasks exists:', !!message.todoListTasks)
          console.log('üîç todoListTasks:', message.todoListTasks)
          
          if (message.todoListTasks && message.todoListTasks.length > 0) {
            // Convert MongoDB todoListTasks to TasksComponent format
            const tasks = message.todoListTasks.map((task: any) => ({
              tool: task.tool,
              explanation: task.text,
              status: task.status
            }))
            
            console.log('üîç Converted tasks for TasksComponent:', tasks)
          
            return (
              <div key={message.id} className="space-y-2">
                <div className="flex items-center gap-2">
                  <div className="w-6 h-6 rounded-md bg-gradient-to-tr from-orange-300 via-blue-400 to-sky-400 flex items-center justify-center flex-shrink-0">
                    <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="12" height="12" viewBox="0 0 512 512">
                      <path d="M0 0 C3.31548061 1.38707072 4.85421798 2.79591027 6.8125 5.7890625 C7.32425781 6.55734375 7.83601562 7.325625 8.36328125 8.1171875 C8.90339844 8.94476563 9.44351563 9.77234375 10 10.625 C14.17539424 16.88337873 18.42614587 23.02620453 23 29 C27.95268626 35.49181366 32.57338443 42.16916508 37.14453125 48.93359375 C40.62945331 54.06532862 44.23880082 59.06776783 48 64 C52.95133225 70.49290799 57.57332126 77.1690716 62.14453125 83.93359375 C65.62945331 89.06532862 69.23880082 94.06776783 73 99 C77.95133225 105.49290799 82.57332126 112.1690716 87.14453125 118.93359375 C90.62945331 124.06532862 94.23880082 129.06776783 98 134 C102.95133225 140.49290799 107.57332126 147.1690716 112.14453125 153.93359375 C115.62945331 159.06532862 119.23880082 164.06776783 123 169 C127.95133225 175.49290799 132.57332126 182.1690716 137.14453125 188.93359375 C140.62945331 194.06532862 144.23880082 199.06776783 148 204 C152.95133225 210.49290799 157.57332126 217.1690716 162.14453125 223.93359375 C165.62945331 229.06532862 169.23880082 234.06776783 173 239 C177.95133225 245.49290799 182.57332126 252.1690716 187.14453125 258.93359375 C190.62945331 264.06532862 194.23880082 269.06776783 198 274 C202.3566042 279.71301395 206.4772241 285.54736679 210.5 291.5 C214.548718 297.48851556 218.69217759 303.36669358 223.0625 309.125 C227.35514285 314.80257479 231.63082681 320.48995318 235.8125 326.25 C236.34689697 326.96559082 236.88129395 327.68118164 237.43188477 328.41845703 C237.91455811 329.08989746 238.39723145 329.76133789 238.89453125 330.453125 C239.32612549 331.04254883 239.75771973 331.63197266 240.20239258 332.23925781 C241 334 241 334 240.97265625 336.00219727 C239.512313 339.00169245 237.42593229 339.88210014 234.54296875 341.51171875 C233.97739258 341.83681931 233.41181641 342.16191986 232.82910156 342.49687195 C231.60085006 343.20119352 230.36927926 343.89975079 229.13485718 344.59320068 C226.47932516 346.08545229 223.84019478 347.60565648 221.20002747 349.12487793 C219.82839141 349.91405944 218.45597395 350.70188428 217.08280945 351.48840332 C210.37855131 355.33453687 203.77924774 359.33934277 197.1875 363.375 C187.16995221 369.49373991 177.10213194 375.5220115 167 381.5 C156.96290768 387.44031075 146.9582 393.4283432 137 399.5 C126.36671155 405.98326787 115.6763327 412.36477342 104.95898438 418.70800781 C95.60315969 424.24705071 86.28309988 429.83996139 77 435.5 C65.71339304 442.3816055 54.36764899 449.15868528 42.97900391 455.87011719 C36.25437169 459.83923289 29.57515353 463.86474776 22.9609375 468.015625 C21.67073886 468.81992771 20.38037729 469.62396914 19.08984375 470.42773438 C16.66647009 471.93722732 14.25788246 473.46719522 11.85546875 475.00976562 C10.77652344 475.68201172 9.69757813 476.35425781 8.5859375 477.046875 C7.6479834 477.64338867 6.7100293 478.23990234 5.74365234 478.85449219 C2.27236016 480.30379837 0.58610365 480.05353468 -3 479 C-5.74365234 477.62744141 -5.74365234 477.62744141 -8.5859375 475.8515625 C-9.66488281 475.18576172 -10.74382812 474.51996094 -11.85546875 473.83398438 C-12.42700684 473.47522217 -12.99854492 473.11645996 -13.58740234 472.74682617 C-16.05225642 471.19998043 -18.53026363 469.67480085 -21.00787354 468.14849854 C-22.3217643 467.33907547 -23.63502711 466.5286323 -24.94769287 465.71722412 C-31.57773882 461.62474993 -38.27633236 457.65141859 -44.98516846 453.68988037 C-56.27418991 447.02302771 -67.5150251 440.2831247 -78.70898438 433.45800781 C-88.09842559 427.73548064 -97.53738361 422.10060119 -107 416.5 C-117.61130098 410.21953143 -128.18099227 403.877075 -138.70898438 397.45800781 C-148.09843074 391.7354775 -157.53758594 386.10094959 -167 380.5 C-180.53931916 372.48407721 -194.00622637 364.35670738 -207.44140625 356.16748047 C-213.23821702 352.63522616 -219.04242387 349.11513645 -224.84558105 345.59332275 C-227.85041734 343.76963886 -230.85488192 341.94534301 -233.859375 340.12109375 C-235.35162598 339.21508423 -235.35162598 339.21508423 -236.87402344 338.29077148 C-237.5755957 337.86481689 -238.27716797 337.4388623 -239 337 C-238.39972294 334.01415322 -237.50849464 331.99024954 -235.734375 329.5234375 C-235.26322266 328.86214844 -234.79207031 328.20085937 -234.30664062 327.51953125 C-233.79294922 326.81183594 -233.27925781 326.10414063 -232.75 325.375 C-232.21568359 324.62863281 -231.68136719 323.88226563 -231.13085938 323.11328125 C-229.42722586 320.73731739 -227.71462242 318.36804308 -226 316 C-224.91133811 314.4922743 -223.82279443 312.98446324 -222.734375 311.4765625 C-221.11040032 309.22801992 -219.48558746 306.98010453 -217.85839844 304.73388672 C-214.20142688 299.68186437 -210.58728073 294.60170003 -207 289.5 C-202.33863251 282.87077288 -197.61055569 276.29271463 -192.85546875 269.73046875 C-189.20004412 264.67917792 -185.58642038 259.60047648 -182 254.5 C-177.33863251 247.87077288 -172.61055569 241.29271463 -167.85546875 234.73046875 C-164.20004412 229.67917792 -160.58642038 224.60047648 -157 219.5 C-152.33863251 212.87077288 -147.61055569 206.29271463 -142.85546875 199.73046875 C-139.20004412 194.67917792 -135.58642038 189.60047648 -132 184.5 C-127.33863251 177.87077288 -122.61055569 171.29271463 -117.85546875 164.73046875 C-114.20004412 159.67917792 -110.58642038 154.60047648 -107 149.5 C-102.33863251 142.87077288 -97.61055569 136.29271463 -92.85546875 129.73046875 C-89.20004412 124.67917792 -85.58642038 119.60047648 -82 114.5 C-77.33863251 107.87077288 -72.61055569 101.29271463 -67.85546875 94.73046875 C-64.20004412 89.67917792 -60.58642038 84.60047648 -57 79.5 C-52.33863251 72.87077288 -47.61055569 66.29271463 -42.85546875 59.73046875 C-39.20004412 54.67917792 -35.58642038 49.60047648 -32 44.5 C-27.34740403 37.88324743 -22.62932662 31.31675215 -17.88183594 24.76782227 C-13.43245083 18.62135296 -9.04874099 12.43018319 -4.69335938 6.21679688 C-1.10099546 1.10099546 -1.10099546 1.10099546 0 0 Z M-20 99 C-21.79576354 101.24470443 -23.5334364 103.50795414 -25.25 105.8125 C-25.78431641 106.52664062 -26.31863281 107.24078125 -26.86914062 107.9765625 C-31.46897523 114.17750368 -35.81901319 120.53314429 -40.14160156 126.92895508 C-44.08579799 132.73777683 -48.22374393 138.35936869 -52.48046875 143.94140625 C-56.3246482 149.0165303 -59.93563965 154.22542399 -63.5 159.5 C-67.98072059 166.13061503 -72.62847475 172.57876504 -77.48046875 178.94140625 C-81.3246482 184.0165303 -84.93563965 189.22542399 -88.5 194.5 C-92.98072059 201.13061503 -97.62847475 207.57876504 -102.48046875 213.94140625 C-106.3246482 219.0165303 -109.93563965 224.22542399 -113.5 229.5 C-117.98072059 236.13061503 -122.62847475 242.57876504 -127.48046875 248.94140625 C-131.3246482 254.0165303 -134.93563965 259.22542399 -138.5 264.5 C-142.52263875 270.45274095 -146.64361272 276.28682301 -151 282 C-155.97714183 288.53136674 -160.65017427 295.23554069 -165.2565918 302.0324707 C-170.05344711 309.10785051 -174.99331353 316.07201172 -180 323 C-177.03581182 326.21693815 -174.03722408 328.33784972 -170.25 330.51171875 C-169.68866867 330.83681931 -169.12733734 331.16191986 -168.54899597 331.49687195 C-167.33701567 332.198256 -166.12347346 332.89694668 -164.90853882 333.59320068 C-161.61457936 335.48185893 -158.33318468 337.39213242 -155.05078125 339.30078125 C-154.37582108 339.69269653 -153.7008609 340.08461182 -153.00544739 340.48840332 C-146.34555132 344.36349127 -139.76237431 348.35749441 -133.1875 352.375 C-123.1686301 358.4916133 -113.10216771 364.52199033 -103 370.5 C-91.8290865 377.11134674 -80.70880127 383.79873583 -69.62646484 390.55737305 C-58.96476087 397.04813307 -48.23117865 403.41574098 -37.48046875 409.7578125 C-36.82565521 410.14490891 -36.17084167 410.53200531 -35.4961853 410.93083191 C-33.72298223 411.97900762 -31.94868898 413.02533846 -30.17431641 414.0715332 C-27.98259242 415.40305357 -25.82966808 416.799834 -23.71240234 418.24682617 C-21.25833113 420.18094478 -21.25833113 420.18094478 -19 420 C-19 314.07 -19 208.14 -19 99 C-19.33 99 -19.66 99 -20 99 Z " fill="#FFFFFF" transform="translate(255,16)"/>
                    </svg>
                  </div>
                  <div className="text-white text-[13px] medium">Kairo</div>
                </div>
                <div className="w-full">
                  <TasksComponent 
                    tasks={tasks}
                    isActive={false}
                  />
                </div>
              </div>
            )
          } else {
            console.log('üîç todoList message has no tasks or empty todoListTasks')
            return null
          }
        }
        
        // Handle old step messages (keep for backward compatibility)
        if (message.isStep && message.stepData && 'description' in message.stepData) {
          return (
            <StepMessage
              key={message.id}
              message={message as any}
              agentTasks={agentTasks}
              currentAgentThought={currentAgentThought}
            />
          )
        }
        
        // Regular message rendering
        return (
          <RegularMessage
            key={message.id}
            message={message}
          />
        )
      })}

      {/* Real-time tasks are now handled via MongoDB todo messages */}

      {isAgentProcessing && <ProcessingMessage />}
    </div>
  )
}
